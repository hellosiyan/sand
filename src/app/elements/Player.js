import Drawable from '../lib/Drawable';
import Pixmap from '../Pixmap';
import state from '../State';
import { config } from '../config';

const pixmaps = {
    'front': Pixmap.load(`
000000000000200000002200000000
000000000000222222222200000000
000000000000222ccccc2200000000
00000000000022ccdddcc200000000
0000000000002c5555555200000000
000000000000ee5fg55g5e00000000
00000000000eee4fh44h5e00000000
0000000000022c4444444200000000
00000000000221ccdddc1220000000
000000000022221cccc11220000000
000000000022221111111220000000
000000000022222222222222000000
000000000222222222222222000000
000000000222222222222222000000
000000022222222222222222000000
000000022222222222222222200000
000005522222222222222222250000
000000555522222222222222555000
000000055555222222222225550000
000000022255555555555555200000
000000222222222222222222200000
000000222222222222222222200000
000002222222222222222222200000
000002222222222222222222200000
000002222222222222222222220000
000022222222222222222222220000
000022222222222212212222210000
000222212221222112112221211000
000222112211122112111221211000
000222112211121112555555555000
005555112211125555225221122000
005222555555551111255521552000
005221152111155155555555555000
005255555555225112551255112500
055225112511155512151251112500
052251515551151512555555555550
052255515151255555555555555555
055555555555555555222222222225
055555555552222222222222555550
555555555555500000120000000000
000000000021200000110000000000
000000000011100000210000000000
000000000011000000100000000000
000000000001000000000000000000
`, config.palettes.playerHut).toDrawable().cache(),
};

export default class Player extends Drawable {
    constructor() {
        super();

        this.width = pixmaps['front'].width;
        this.height = pixmaps['front'].height;

        this.levitationTimeInterval = 0;
        this.levitationY = 0;

        this.direction = {
            'x': 'left', // (left|right)
            'y': 'down', // (up|down)
        };
    }

    setDirection(direction) {
        if (direction.x) {
            this.direction.x = direction.x;
        }

        if (direction.y) {
            this.direction.y = direction.y;
        }

        return this;
    }

    draw(ctx) {
        const spriteName = 'front';

        this.levitationTimeInterval = (this.levitationTimeInterval + state.loop.dt/2) % 2;
        const levitationHeightRatio = Math.abs(this.levitationTimeInterval - 1) * 0.1;
        this.levitationY = Math.round(levitationHeightRatio * this.height);

        let x = this.x;
        let y = this.y - this.levitationY;

        if (this.direction.x == 'left') {
            ctx.scale(-1, 1);
            x = -1 * this.x - this.width;
        }

        let drawable = pixmaps[spriteName];
        drawable.x = x;
        drawable.y = y;
        drawable.draw(ctx);
    }
}
